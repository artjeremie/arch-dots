#!/bin/sh

SEP='|'
interval=1
rxs=0
txs=0

pulseaudio() {
    VOL=$(pamixer --get-volume-human | tr -d '%')
printf "%s" "$SEP1"
    if [ "$VOL" = "muted" ] || [ "$VOL" -eq 0 ]; then
        printf "婢"
    elif [ "$VOL" -gt 0 ] && [ "$VOL" -le 33 ]; then
        printf "奔 %s%%" "$VOL"
    elif [ "$VOL" -gt 33 ] && [ "$VOL" -le 66 ]; then
        printf "墳 %s%%" "$VOL"
    else
        printf " %s%%" "$VOL"
    fi
}

_date() {
  printf " %s $SEP  %s" "$(date "+%I:%M %p")" "$(date "+%Y-%m-%d")"
}

torrents() {
    data=$(transmission-remote -l 2>/dev/null | grep -E "%|n/a")
    [ "$data" ] || return
    while read -r line; do
        per="$(printf %s "$line" | awk '{ printf $2 }')"
        printf %s "$line" | sed "
            s/.*Stopped.*/  /g;
            s/.*Seeding.*/  /g;
            s/.*Idle.*/  /g;
            s/.*Uploading.*/  /g;
            s/.*Downloading.*/  /g;
            s/.*[A-Z][a-z].*/  / g;
            "
        printf %s "$per"
    done <<EOF
    $data
EOF
    transmission-remote -l | grep -qE "%|n/a" && printf " %s" "$SEP"
}

while true; do
  # Network Interface Name
  interface=$(ip route get 8.8.8.8 2>/dev/null| awk '{print $5}')

  # CPU
  CPU_TEMP=$(sensors | awk '/Core 0/ {print "CPU" $3}')

  # GPU
  GPU_TEMP=$(nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits)

  # Used and total memory
  MEMUSED=$(free --mebi | sed -n '2{p;q}' | awk '{printf ("%2.2fGiB\n", ( $3 / 1024))}')

  # MPD
  mpd() {
      music="$(mpc current -f "%artist% - %title%")"
      [ "$music" ] && printf " %s %s" "$music" "$SEP"
}

# Status
xsetroot -name " $(pulseaudio) $SEP $(torrents) ${rxs}kb|${txs}kb $SEP MEM-${MEMUSED} $SEP GPU-${GPU_TEMP}°C $SEP ${CPU_TEMP} $SEP $(_date) "

# internet

  rx1=$(cat /sys/class/net/$interface/statistics/rx_bytes)
  tx1=$(cat /sys/class/net/$interface/statistics/tx_bytes)

  sleep $interval

  rx2=$(cat /sys/class/net/$interface/statistics/rx_bytes)
  tx2=$(cat /sys/class/net/$interface/statistics/tx_bytes)
  rxs=$(expr $rx2 - $rx1)
  txs=$(expr $tx2 - $tx1)
  rxs=$(expr $rxs / $interval)
  txs=$(expr $txs / $interval)
  rxs=$(expr $rxs / 1024)
  txs=$(expr $txs / 1024)
done &
