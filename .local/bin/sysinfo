#!/bin/sh
#                           ██            ████
#                          ░░            ░██░
#   ██████  ██   ██  ██████ ██ ███████  ██████  ██████
#  ██░░░░  ░░██ ██  ██░░░░ ░██░░██░░░██░░░██░  ██░░░░██
# ░░█████   ░░███  ░░█████ ░██ ░██  ░██  ░██  ░██   ░██
#  ░░░░░██   ░██    ░░░░░██░██ ░██  ░██  ░██  ░██   ░██
#  ██████    ██     ██████ ░██ ███  ░██  ░██  ░░██████
# ░░░░░░   ██      ░░░░░░  ░░ ░░░   ░░   ░░    ░░░░░░
#        ░░
#
#█▓▒░ vars
#full=▓
#empty=░
full=━
#empty=━
#empty=─
#full=┅
empty=┄

for os in /etc/os-release /usr/lib/os-release; do . $os 2>/dev/null; done
distro=$NAME
kernel=$(uname -r)
kernel=${kernel%%-*}
pkgs=$(pacman -Qqs | wc -l)
wm=$(awk '/^exec/ {print $2; exit}' ~/.xinitrc)
font='Hack Nerd Font'
colors='iceberg'

#█▓▒░ progress bar
drawbar() {
  perc=$1
  size=$2
  length=$((perc * size / 100))
  color=${3-34}
  i=0
  while [ $i -lt 10 ]; do
    if [ $i -lt $length ]; then
      printf "\033[1;${color}m${full}"
    else
      printf "\033[0;${color}m${empty}"
    fi
    i=$((i + 1))
  done
}

#█▓▒░ colors
echo
i=0
while [ $i -le 6 ]; do
  printf "\033[$((i + 41));$((i + 30))m█▓▒░"
  i=$((i + 1))
done
printf "\033[37m█\033[0m▒░\n\n"

#█▓▒░ greets
printf " \033[0m  hello \033[34m$USER\033[0m, i'm \033[34m$(hostname)\033[0m\n"

#█▓▒░ environment
printf " \033[1;33m      distro \033[0m$distro\n"
printf " \033[1;33m      kernel \033[0m$kernel\n"
printf " \033[1;33m    packages \033[0m$pkgs\n"
printf " \033[1;33m          wm \033[0m$wm\n"
printf " \033[1;33m        font \033[0m$font\n"
printf " \033[1;33m      colors \033[0m$colors\n\n"

#█▓▒░ cpu
cpu=$(awk '/cpu/ {usage=($2+$4)*100/($2+$4+$5); exit} END {printf int(usage)}' /proc/stat)
printf "    \033[0;34m cpu \033[1;34m%-5s %s\n" $cpu% $(drawbar $cpu 10)

#█▓▒░ ram
while read -r mem total used _; do
  if [ $mem = 'Mem:' ]; then
    ram=$((100 * used / total))
    break
  fi
done<<EOF
$(free)
EOF
[ $ram -ge 75 ] && color=31 || color=34
printf "    \033[0;34m ram \033[1;${color}m%-5s %s\n" $ram% $(drawbar $ram 10)

#█▓▒░ battery
battery=/sys/class/power_supply/BAT?
charge=$((100 * $(cat $battery/charge_now) / $(cat $battery/charge_full)))
[ $charge -le 20 ] && color=31 || color=34
printf "    \033[0;${color}m bat \033[1;${color}m%-5s %s\n" $charge% $(drawbar $charge 10 $color)

#█▓▒░ volume
vol=$(vol get)
printf "    \033[0;${color}m vol \033[1;${color}m%-5s %s\n" $vol% $(drawbar $vol 10 $color)

#█▓▒░ temperature
temp=$(sensors | awk '/Core 0/ {printf int(gensub(/+(.*)°C/, "\\1", "g", $3))}')
[ $temp -ge 70 ] && color=31 || color=34
printf "    \033[0;${color}mtemp \033[1;${color}m%-6s %s\n\n" "$temp°C" $(drawbar $temp 10 $color)
